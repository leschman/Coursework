Question 1: The word that most often follows "happy" is "birthday."
Question 2: The word that most often follows "sad" is "song."
Question 3: There are 58 unique words that follow "computer."
Question 4: The word that most often follows "computer" is "love."
Question 5: "Love" follows "computer 13 times.
Question 6: Using the starting word "Happy" the song title is:
			"happy birthday song for the world is a little girl in the world is a little girl in the world is."
Question 7: Using the starting word "Sad" the song title is:
			"sad song for the world is a little girl in the world is a little girl in the world is a."
Question 8: Using the starting word "Hey" the song title is:
			"hey hey hey hey hey hey hey hey hey hey hey hey hey hey hey hey hey hey hey hey."
Question 9: Using the starting word "little" the song title is:
			"little girl in the world is a little girl in the world is a little girl in the world is a."
Question 10: 	"dig it up the world is a little girl in the world is a little girl in the world is a."
				"bible for the world is a little girl in the world is a little girl in the world is a little."
				"love you are you are you are you are you are you are you are you are you are you are."
				"compass rose of the world is a little girl in the world is a little girl in the world is a."
				"montana sacra nova baby i love you are you are you are you are you are you are you are."
				"orange blossom white christmas song for the world is a little girl in the world is a little girl in the."
				"hobbit."
				"wake up the world is a little girl in the world is a little girl in the world is a little."
				"elk child is a little girl in the world is a little girl in the world is a little girl in."
				"cell block party time to the world is a little girl in the world is a little girl in the world."

				The main problem is that common words like "up" and "the" all redirect titles into a loop of
				"is a little girl in the world", which then takes the title over. 
Question 11:	Using the starting word "little" the song title is:
				"little girl you are you are you are you are you are you are you are you are you are."
Question 12: 	Not in spirit, it broke up the original cycle and replaced it with "you are". 
Question 13:	Using the starting word "love" the song title is:
				"love you are you are you are you are you are you are you are you are you are you."
Question 14: 	"dig it up your love you are you are you are you are you are you are you are you."
				"bible belt buckle up your love you are you are you are you are you are you are you are."
				"love you are you are you are you are you are you are you are you are you are you are."
				"compass rose garden eden som en la vida es el amor de la vida es el amor de la vida es."
				"montana sacra nova baby i love you are you are you are you are you are you are you are."
				"orange blossom white christams song you are you are you are you are you are you are you are you."
				"hobbit."
				"wake up your love you are you are you are you are you are you are you are you."
				"elk child is my heart is my heart is my heart is my heart is my heart is my heart."
				"cell block party time is my heart is my heart is my heart is my heart is my heart is my."
				This did not solve the problem encountered in question 10. The problem is that loops occur in 
				the bigram counts, like you follows are and are follows you. a solution would be to have code 
				in the method that builds the titles that checks to see if the word it is about to add is already
				part of that title, and if so to pick the word with the next highest count. To do this it would 
				probably be best to also sort the second words in the bi-grams as the words are reached building titles.
Question 15:	"hobbit" is a song title I found that is less than 20 words, 
				I did not find any that were multiple words that were less than 20, they all terminated with loops.			
Question 16:	I liked how easy it was to use the Hash of Hashes data structure, in Java or C it would have been 
				hundreds of lines of code to build something like that and then to use it, with perl it was as easy as 
				accessing an array. 
Question 17:	I did not like how non-verbose regular expressions are. they are very difficult to learn, very difficult 
				to read and very difficult to debug. I understand that they are very powerful, but they also seem very unwieldy. 
				similarly I wish there was an easy way to step through perl programs and see what they are doing. 
Question 18:	I enjoyed playing with language and building funny song titles. I also enjoyed learning a little perl. I did not 
				enjoy regular expressions or figuring out how to download the text file. 
				I ended up downloading it off of http://labrosa.ee.columbia.edu/millionsong/pages/getting-dataset by right clicking 
				on the link I found after searching for it for about half an hour. I wish that this or some other method of getting
				the file would have been provided with the assignment.
Question 19:	I probably spent between 15-20 hours on this assignment.
Question 20:	I would like to learn perl a lot better. I don't know what all I would use it for, but it was really nice to just 
				get a functioning prototype up and running quickly. 




