package emergencyroomarrayheap;

import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Logan Esch and Hannah Cho
 */
public class Gui extends javax.swing.JFrame {

    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        admitPannel = new javax.swing.JPanel();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        ssnLabel = new javax.swing.JLabel();
        priorityLabel = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();
        priorityField = new javax.swing.JTextField();
        admitButton = new javax.swing.JButton();
        dischargePannel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        room1Text = new javax.swing.JTextArea();
        room1Discharge = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        room2Text = new javax.swing.JTextArea();
        room2Discharge = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        ssnField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        firstNameLabel.setText("First Name:");

        lastNameLabel.setText("Last Name:");

        ssnLabel.setText("SSN:");

        priorityLabel.setText("Priority:");

        admitButton.setText("Admit");
        admitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admitButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Room 1");

        room1Text.setColumns(20);
        room1Text.setRows(5);
        jScrollPane1.setViewportView(room1Text);

        room1Discharge.setText("Discharge");
        room1Discharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room1DischargeActionPerformed(evt);
            }
        });

        room2Text.setColumns(20);
        room2Text.setRows(5);
        jScrollPane2.setViewportView(room2Text);

        room2Discharge.setText("Discharge");
        room2Discharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                room2DischargeActionPerformed(evt);
            }
        });

        jLabel2.setText("Room 2");

        javax.swing.GroupLayout dischargePannelLayout = new javax.swing.GroupLayout(dischargePannel);
        dischargePannel.setLayout(dischargePannelLayout);
        dischargePannelLayout.setHorizontalGroup(
            dischargePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dischargePannelLayout.createSequentialGroup()
                .addGroup(dischargePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dischargePannelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dischargePannelLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dischargePannelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(room1Discharge)))
                .addGroup(dischargePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dischargePannelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(94, 94, 94))
                    .addGroup(dischargePannelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(dischargePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(room2Discharge)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(30, Short.MAX_VALUE))))
        );
        dischargePannelLayout.setVerticalGroup(
            dischargePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dischargePannelLayout.createSequentialGroup()
                .addGroup(dischargePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dischargePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(dischargePannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(room1Discharge)
                    .addComponent(room2Discharge)))
        );

        ssnField.setToolTipText("");

        javax.swing.GroupLayout admitPannelLayout = new javax.swing.GroupLayout(admitPannel);
        admitPannel.setLayout(admitPannelLayout);
        admitPannelLayout.setHorizontalGroup(
            admitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(admitPannelLayout.createSequentialGroup()
                .addGroup(admitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, admitPannelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(admitButton))
                    .addGroup(admitPannelLayout.createSequentialGroup()
                        .addGroup(admitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(admitPannelLayout.createSequentialGroup()
                                .addGroup(admitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(priorityLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ssnLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lastNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(admitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lastNameField)
                                    .addComponent(ssnField)
                                    .addComponent(priorityField, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)))
                            .addGroup(admitPannelLayout.createSequentialGroup()
                                .addComponent(firstNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dischargePannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        admitPannelLayout.setVerticalGroup(
            admitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(admitPannelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(admitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstNameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(firstNameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(admitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(admitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ssnField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ssnLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(admitPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priorityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priorityLabel))
                .addGap(18, 18, 18)
                .addComponent(admitButton)
                .addGap(4, 4, 4))
            .addGroup(admitPannelLayout.createSequentialGroup()
                .addComponent(dischargePannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(admitPannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(admitPannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void admitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admitButtonActionPerformed
        try {
            int priority = Integer.parseInt(priorityField.getText());

            Patient patient = new Patient(firstNameField.getText(), lastNameField.getText(), String.copyValueOf(ssnField.getPassword()), priority);
            firstNameField.setText("");
            lastNameField.setText("");
            ssnField.setText("");
            priorityField.setText("");
            Patient temp = patient;
            //loop throught the treatment rooms and put the patient in one. 
            placementLoop:
            for (int i = 0; i < treatmentRooms.length; i++) {
                //check if room is busy
                if (!treatmentRooms[i].inUse()) {
                    treatmentRooms[i].sendToRoom(patient);
                    updateTreatmentRoomText(treatmentRooms[i], i);
                    break placementLoop;
                } else {
                    //see if their priories are less or equal. 
                    if (treatmentRooms[i].checkRoom().getPriority() <= patient.getPriority()) {
                        if (treatmentRooms[i].checkRoom().getPriority() == patient.getPriority()) {
                            //if equal generate random to see who stays.
                            Random random = new Random();
                            if (random.nextBoolean()) {
                                temp = patient;
                            }
                        } else {
                            //if the new patient is higher priority,
                            //boot the old patient from the room.
                            //put them in temp.
                            temp = treatmentRooms[i].getFromRoom();
                            treatmentRooms[i].sendToRoom(patient);
                            updateTreatmentRoomText(treatmentRooms[i], i);
                        }
                        //put temp in the front of the queue. 
                        heap.insert(patient);
                        break placementLoop;
                        //everyone acounted for, stop looping.
                    }
                    heap.insert(patient);
                }
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Please input all data.");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a number for priority.");
        }
    }//GEN-LAST:event_admitButtonActionPerformed

    private void room1DischargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room1DischargeActionPerformed
        if (!heap.isEmpty()) {
            treatmentRooms[0].sendToRoom(heap.delete());
            if (treatmentRooms[0].inUse()) {
                updateTreatmentRoomText(treatmentRooms[0], 0);
            }
        } else if (!treatmentRooms[0].inUse()) {
            JOptionPane.showMessageDialog(null, "No one to discharge.");
        } else {
            treatmentRooms[0].sendToRoom(null);
            room2Text.setText("");
        }    }//GEN-LAST:event_room1DischargeActionPerformed

    private void room2DischargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_room2DischargeActionPerformed
        if (!heap.isEmpty()) {
            treatmentRooms[0].sendToRoom(heap.delete());
            if (treatmentRooms[0].inUse()) {
                updateTreatmentRoomText(treatmentRooms[1], 1);
            }
        } else if (!treatmentRooms[1].inUse()) {
            JOptionPane.showMessageDialog(null, "No one to discharge.");
        } else {
            treatmentRooms[1].sendToRoom(null);
            room1Text.setText("");
        }
    }//GEN-LAST:event_room2DischargeActionPerformed

    private void updateTreatmentRoomText(TreatmentRoom room, int i) {
        Patient patient = room.checkRoom();
        String text = "First Name: " + patient.getFirstName() + "\n"
                + "Last Name:  " + patient.getLastName() + "\n"
                + "SSN:        " + patient.getSSN() + "\n"
                + "Priority:   " + patient.getPriority();
        if (i == 0) {
            room1Text.setText(text);
        } else {
            room2Text.setText(text);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //Initailize arrays
        for (int i = 0; i < treatmentRooms.length; i++) {
            treatmentRooms[i] = new TreatmentRoom();
        }



        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);

            }
        });


    }
    final static int numTreatmentRooms = 2;
    static TreatmentRoom[] treatmentRooms = new TreatmentRoom[numTreatmentRooms];
    static ArrayHeap<Patient> heap = new ArrayHeap<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton admitButton;
    private javax.swing.JPanel admitPannel;
    private javax.swing.JPanel dischargePannel;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField priorityField;
    private javax.swing.JLabel priorityLabel;
    private javax.swing.JButton room1Discharge;
    private javax.swing.JTextArea room1Text;
    private javax.swing.JButton room2Discharge;
    private javax.swing.JTextArea room2Text;
    private javax.swing.JPasswordField ssnField;
    private javax.swing.JLabel ssnLabel;
    // End of variables declaration//GEN-END:variables
}
